<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="overun.soap.mapper.PersonMapper">
  <resultMap id="BaseResultMap" type="overun.po.Person">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="fname" jdbcType="VARCHAR" property="fname" />
    <result column="lname" jdbcType="VARCHAR" property="lname" />
    <result column="age" jdbcType="TINYINT" property="age" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="d_id" jdbcType="BIGINT" property="dId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="describes" jdbcType="VARCHAR" property="describes" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, fname, lname, age, sex, d_id, address, describes
  </sql>
  <select id="selectByExample" parameterType="overun.po.PersonExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from person
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from person
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from person
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="overun.po.PersonExample">
    delete from person
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="overun.po.Person">
    insert into person (id, fname, lname, 
      age, sex, d_id, address, 
      describes)
    values (#{id,jdbcType=BIGINT}, #{fname,jdbcType=VARCHAR}, #{lname,jdbcType=VARCHAR}, 
      #{age,jdbcType=TINYINT}, #{sex,jdbcType=BIT}, #{dId,jdbcType=BIGINT}, #{address,jdbcType=VARCHAR}, 
      #{describes,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="overun.po.Person">
    insert into person
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fname != null">
        fname,
      </if>
      <if test="lname != null">
        lname,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="dId != null">
        d_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="describes != null">
        describes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fname != null">
        #{fname,jdbcType=VARCHAR},
      </if>
      <if test="lname != null">
        #{lname,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=TINYINT},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="dId != null">
        #{dId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="describes != null">
        #{describes,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="overun.po.PersonExample" resultType="java.lang.Long">
    select count(*) from person
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update person
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.fname != null">
        fname = #{record.fname,jdbcType=VARCHAR},
      </if>
      <if test="record.lname != null">
        lname = #{record.lname,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=TINYINT},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=BIT},
      </if>
      <if test="record.dId != null">
        d_id = #{record.dId,jdbcType=BIGINT},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.describes != null">
        describes = #{record.describes,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update person
    set id = #{record.id,jdbcType=BIGINT},
      fname = #{record.fname,jdbcType=VARCHAR},
      lname = #{record.lname,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=TINYINT},
      sex = #{record.sex,jdbcType=BIT},
      d_id = #{record.dId,jdbcType=BIGINT},
      address = #{record.address,jdbcType=VARCHAR},
      describes = #{record.describes,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="overun.po.Person">
    update person
    <set>
      <if test="fname != null">
        fname = #{fname,jdbcType=VARCHAR},
      </if>
      <if test="lname != null">
        lname = #{lname,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=TINYINT},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="dId != null">
        d_id = #{dId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="describes != null">
        describes = #{describes,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="overun.po.Person">
    update person
    set fname = #{fname,jdbcType=VARCHAR},
      lname = #{lname,jdbcType=VARCHAR},
      age = #{age,jdbcType=TINYINT},
      sex = #{sex,jdbcType=BIT},
      d_id = #{dId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      describes = #{describes,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>